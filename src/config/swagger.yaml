openapi: 3.0.0
info:
  title: MEN REST API Boilerplate
  description: MongoDB ExpressJS NodeJS REST API Typescript
  version: 1.0.0
servers:
  - url: http://localhost:4000/api/
    description: Localhost development server
components:
  securitySchemes:
    ApiKeyAuth: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: auth-token

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        birthdate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ICreateLoginDTO:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 6
          maxLength: 255
        password:
          type: string
          minLength: 6
          maxLength: 255

    ICreateUserDTO:
      type: object
      properties:
        firstName:
          type: string
          minLength: 3
          maxLength: 255
        lastName:
          type: string
          minLength: 3
          maxLength: 255
        email:
          type: string
          format: email
          minLength: 6
          maxLength: 255
        password:
          type: string
          minLength: 6
          maxLength: 255
        birthdate:
          type: string
          format: date-time

paths:
  /user/register:
    post:
      summary: Register a new User
      description: Register a new User in the database
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ICreateUserDTO"

      responses:
        201:
          description: User created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  _id:
                    type: string

  /user/login:
    post:
      summary: Login a User
      description: Login a User in order to get JWT token (auth-token)
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ICreateLoginDTO"

      responses:
        200:
          description: User logged in succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  data:
                    type: string
